<script src="/rootscripts.js"></script>

<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

<body>
  <link rel="stylesheet" href="/landingstyle.css">
    <style>canvas {background: linear-gradient(rgba(0,0,0,.8), rgba(0,0,0,.8)), url('https://images.pexels.com/photos/1068523/pexels-photo-1068523.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940'); background-size: cover; background-position: center;}</style>
    <canvas></canvas>
  {{> herocontent}}


<div class="section2">
  <div class="sec2con">
  <center class="reason-why">
    <p align="center" class="sec2Text">Learning how to code can be needlessly complicated, especially because it isn't taught in public schools.
       CodingForKids makes learning how to code feel easy by providing private lessons.
    </p>
  </center>

  <div class="sec2Benefits">
    <div class="benefit">
      <i class="glyphicon glyphicon-calendar"></i>

      <h3>Fits your schedule</h3>
      <p>You decide when to schedule tutoring sessions, and you can reschedule sessions at your leisure.</p>
    </div>
    <div class="benefit">
      <i class="glyphicon glyphicon-flash"></i>
      <h3>Fast and easy</h3>
      <p>Creating an account takes only minutes. Installing all of the tools is simple to do.</p>
    </div>

    <div class="benefit">
      <i class="glyphicon glyphicon-log-out"></i>
      <h3 align="left">Cancel Anytime</h3>
      <p>If you decide CodingForKids isn't for you - no problem. No commitment. Cancel online anytime.</p>
    </div>
  </div>
    <div class="buttoncta">
    <a href="/sign-up"><button style="color: white;" id="cta2" class="cta">Sign Up</button></a>
    </div>
    <p style="color: white; margin-top: 10px; margin-bottom: -2rem; padding-bottom: 1rem;" class="sec3sub">Sessions are $30 for 60 minutes or $20 for 30 minutes.</p>

  </div>
</div>

<div class="sec3">
  <h1 class="sec3title">Get live 1 to 1 code tutoring in languages that matter</h1>
  <p class="sec3sub">Choose from 3 different tracks</p>
  <div class="trackCont">
    <div id="track1" class="track">
      <h2>Web</h2>
      <center>
        <img height="80" width="80" src="https://i.pinimg.com/originals/1e/00/78/1e0078f8266738d005b5fc7d00f9a66e.png" />
        <p class="cardtext">Learn how to create original websites and web apps!</p>
      </center>
      <p class="action">Learn More</p>
    </div>

    <div id="track2" class="track">
      <h2>Mobile</h2>
      <center>
        <img height="80" width="80" src="https://www.aalogics.com/sites/default/files/icon-ux-ui.png" />
        <p class="cardtext">Learn how to create mobile games and apps!</p>
      </center>

      <p class="action">Learn More</p>
    </div>
    <div id="track3" class="track">
      <h2>Computer Science</h2>
      <center>
        <img height="80" width="80" src="https://expandedschools.org/sites/default/files/Computers-Communication-Devices.png" />
        <p class="cardtext">Learn the fundamentals that all software is based on!</p>
      </center>

      <p class="action">Learn More</p>
    </div>
  </div>
  <br><br>
  <p class="sec3sub">Start off with Web Development, then move on to Mobile or Computer Science.</p>

  <center>
    <a href="/sign-up"><button style="color: white;" id="cta2" class="cta">Sign Up</button></a>
  </center>


  {{> trackModels}}



</div>


<div class="sec4">
  <div class="sec4img"></div>

  <div class="sec4content">
    <div class="sec4copy">
      <h2>Learn Anywhere, Take Anywhere</h2>
      <p style="font-size: 2rem;">Our intuitive Dashboard works on all devices</p>
      <p>Keep track of reports and assignments on the go! If you ever get stuck on something you can ask for help right in the dashboard!</p>
      <br><br>
      <a href="sign-up"><button style="color: white;" id="cta2" class="cta">Get Started</button></a>
    </div>
  </div>

</div>

<div class="sec5">
  {{> mailchimp}}
  <h2 align="center" style="color: white;">One of our tutors will contact you within 24 hours</h2>
</div>

<div style="display: none;">
<h1 style="display: none;" align="center" id="typed" class="root1Text"></h1>
</div>

</div><!--movedown-->


<script>

const canvas = document.querySelector('canvas');

canvas.width = window.innerWidth;
canvas.height = window.innerHeight;
const c = canvas.getContext('2d');
//
// c.fillStyle = 'rgba(255,0,20,.6)';
// c.fillRect(100, 100, 100, 100);
// c.fillStyle = 'rgba(255,120,20,.6)';
// c.fillRect(200, 300, 100, 100);
// c.fillStyle = 'rgba(15,70,200,.8)';
// c.fillRect(300, 140, 200, 100);
//
// //line
//
// c.beginPath();
// c.moveTo(50, 300);
// c.lineTo(300, 100);
// c.lineTo(400, 300);
// c.strokeStyle = "#04fa00";
// c.stroke();

// //arc /cricle
// c.beginPath();
// c.arc(300, 300, 30, 0, Math.PI * 2, false);
// c.strokeStyle = 'green';
// c.stroke();
//
// for (let i = 0; i < 3; i++) {
//   let x = Math.random() * window.innerWidth;
//   let y = Math.random() * window.innerHeight;
//   c.beginPath();
//   c.arc(x, y, 30, 0, Math.PI * 2, false);
//   c.strokeStyle = 'green';
//   c.stroke();
// }


var mouse = {
  x: undefined,
  y: undefined
}

let maxRadius = 40;
// let minRadius = 2;

let colorArray = [
  '#2980b9',
  '#e74c3c',
  '#2c3e50',
  '#9b59b6',
  '#f1c40f',
  '#27ae60',
]

window.addEventListener('mousemove', function(event) {
  mouse.x = event.x
  mouse.y = event.y
})

window.addEventListener('touch', function(event) {
  mouse.x = event.x
  mouse.y = event.y
})


window.addEventListener('resize', function(e) {
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
  init();
})

function Circle(x, y, dx, dy, radius) {
  this.x = x;
  this.y = y;
  this.dx = dx;
  this.dy = dy;
  this.radius = radius
  this.minRadius = radius
  this.color = colorArray[Math.floor(Math.random() * colorArray.length)];

  this.draw = function() {
    c.beginPath();
    c.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false
        );
    c.strokeStyle = 'blue';
    c.stroke();
    c.fillStyle = this.color;
    c.fill();
  }

  this.update = function() {
    if (this.x + this.radius > innerWidth || this.x - this.radius < 0) {
      this.dx = -this.dx;
    }

    if (this.y + this.radius > innerHeight || this.y - this.radius < 0) {
      this.dy = - this.dy;
    }

    this.x += this.dx;
    this.y += this.dy;

    //interactivity
    if (mouse.x - this.x < 50 && mouse.x - this.x > -50 && mouse.y - this.y < 50 && mouse.y - this.y > -50) {
      if (this.radius < maxRadius) {
        this.radius += 1;
      }
    } else if (this.radius > this.minRadius) {
      this.radius -= 1;
    }


    this.draw();
  }
}

var circleArray = [];


function init() {
  circleArray = [];
  for (let i = 0; i < 800; i ++) {
    let radius = Math.random() * 3 + 1;

    let x = Math.random() * (innerWidth - radius * 2) + radius;
    let y = Math.random() * (innerHeight - radius * 2) + radius;
    let dx = (Math.random() - 0.5);
    let dy = (Math.random() -0.5);

    circleArray.push(new Circle(x, y, dx, dy, radius))
  }

}

init();

function animate() {
  requestAnimationFrame(animate);
  c.clearRect(0, 0, innerWidth, innerHeight
      );

      for (let i = 0; i < circleArray.length; i++) {
        circleArray[i].update();
      }

}

animate();









</script>
